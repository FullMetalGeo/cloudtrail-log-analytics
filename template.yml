AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >

    This SAM example creates the following resources:

      SNS Topic: Configure SNS topic to receive notifications when the CloudTrail log file is created in s3
      Lambda Function:  Create Function which get's triggered when SNS receives notification, reads the contents from s3 and stores them in Elasticsearch Domain
      S3 Bucket: S3 Bucket to hold the CloudTrail Logs with write permission from any CloudTrail service

Parameters:
  EsHost:
    Type: String
    Default: 00bd4d1418a8daabef2898f0898f7542.us-east-1.aws.found.io
    Description: Hostname of ElasticSearch cluster (No HTTP/HTTPS prefix or trailing slash)
  EsUser:
    Type: String
    Default: elastic
    Description: ElasticSearch user name
  EsIndex:
    Type: String
    Default: cloudtrail
    Description: ElasticSearch index prefix (No trailing dash)
  EsPort:
    Type: String
    Default: 9243
    Description: ElasticSearch connection port
  ConfigPath:
    Type: String
    Default: /dev/CloudTrailPushFunction/
    Description: Path to config values in SSM Parameter Store

Outputs:
    LambdaFunction:
      Description: "Lambda Function that reads CloudTrail logs and stores them into Elasticsearch Domain"
      Value: !GetAtt CloudTrailPushFunction.Arn
    S3Bucket:
      Description: "S3 Bucket Name where CloudTrail Logs are delivered"
      Value: !Ref S3Bucket
    SnsTopic:
      Description: "Name of the SNS topic"
      Value: !GetAtt SNSTopic.TopicName

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
  S3BucketPolicy: 
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: 
        Ref: S3Bucket
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: 
              !Sub |-
                arn:aws:s3:::${S3Bucket}
          - 
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
                arn:aws:s3:::${S3Bucket}/AWSLogs/*
            Condition: 
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"  

  SNSTopic:
    Type: AWS::SNS::Topic
  SNSTopicPolicy: 
    Type: "AWS::SNS::TopicPolicy"
    Properties: 
      Topics: 
        - Ref: "SNSTopic"
      PolicyDocument: 
        Version: "2008-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailSNSPolicy"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Resource: "*"
            Action: "SNS:Publish"

  CloudTrailPushFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: CloudTrailPushFunction
      Description: Pushes CloudTrail log files to Elasticsearch
      Handler: index.handler
      Runtime: python3.6
      CodeUri: ./
      Policies:
      Role:
        Fn::GetAtt:
        - CloudTrailPushFunctionRole
        - Arn
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopic
      Environment:
        Variables:
          CONFIG_PATH: /dev/CloudTrailPushFunction/

  ParameterStoreEncryptionKey:
    Properties:
      Description: Encryption key for cloudtrail lambda function
      EnableKeyRotation: false
      Enabled: true
      KeyPolicy:
        Id: cloudtrail-param-key
        Statement:
        - Action:
          - kms:Create*
          - kms:Encrypt
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Effect: Allow
          Principal: 
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/leone-root-trust
          Resource: '*'
          Sid: Allow administration of the key & encryption of new values
        - Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Effect: Allow
          Principal:
            AWS: !GetAtt CloudTrailPushFunctionRole.Arn
          Resource: '*'
          Sid: Allow use of the key
        Version: '2012-10-17'
    Type: AWS::KMS::Key
  
  ParameterStoreKeyAlias:
    Properties:
      AliasName: alias/CloudTrailPushKey
      TargetKeyId:
        Ref: ParameterStoreEncryptionKey
    Type: AWS::KMS::Alias
  
  CloudTrailPushFunctionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - ssm:GetParameter*
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
          Version: '2012-10-17'
        PolicyName: ParameterStoreAccess
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: LambdaBasicExecution
      - PolicyDocument:
          Statement:
          - Action:
            - s3:Get*
            - s3:List*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${S3Bucket}
              - !Sub arn:aws:s3:::${S3Bucket}/* 
          Version: '2012-10-17'
        PolicyName: S3Access
    Type: AWS::IAM::Role
  
  PortParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/dev/CloudTrailPushFunction/ES_PORT'
      Description: 'ElasticSearch Port'
      Type: String
      Value: !Ref EsPort
  
  IndexParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/dev/CloudTrailPushFunction/ES_INDEX'
      Description: 'ElasticSearch Index'
      Type: String
      Value: !Ref EsIndex
  
  HostParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/dev/CloudTrailPushFunction/ES_HOST'
      Description: 'ElasticSearch Host'
      Type: String
      Value: !Ref EsHost
  
  UserParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/dev/CloudTrailPushFunction/ES_USER'
      Description: 'ElasticSearch User'
      Type: String
      Value: !Ref EsUser
